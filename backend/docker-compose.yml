version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: mega_x
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mega_x || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 15
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env            # ← make sure this points to your real .env
    environment:
      # ---- Compat aliases some code expects (over and above what's in .env) ----
      # If your code reads ALGORITHM instead of JWT_ALGORITHM:
      ALGORITHM: ${JWT_ALGORITHM:-HS256}
      # If your code reads ACCESS_TOKEN_EXPIRE_MINUTES instead of JWT_ACCESS_TOKEN_EXPIRE_MINUTES:
      ACCESS_TOKEN_EXPIRE_MINUTES: ${JWT_ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      # Some code expects refresh expiry in minutes (7 days = 10080):
      REFRESH_TOKEN_EXPIRE_MINUTES: ${REFRESH_TOKEN_EXPIRE_MINUTES:-10080}
      # Useful for unbuffered logs
      PYTHONUNBUFFERED: "1"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A worker.worker worker --loglevel=info --concurrency=${WORKER_CONCURRENCY:-2}
    volumes:
      - .:/app
    env_file:
      - .env            # ← make sure this points to your real .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      WORKER_CONCURRENCY: ${WORKER_CONCURRENCY:-2}
      PYTHONUNBUFFERED: "1"
    depends_on:
      redis:
        condition: service_started

  metabase:
    image: metabase/metabase:latest
    ports:
      - "3000:3000"
    env_file:
      - .env            # ← make sure this points to your real .env
    environment:
      MB_SITE_URL: ${MB_SITE_URL}
      MB_ENCRYPTION_SECRET: ${MB_ENCRYPTION_SECRET}
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metabase_data:/metabase-data
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  metabase_data:
